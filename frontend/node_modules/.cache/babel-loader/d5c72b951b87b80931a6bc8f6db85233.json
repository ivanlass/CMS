{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projekti\\\\MERN\\\\frontend\\\\src\\\\ClientSide\\\\Portal.js\";\nimport React, { useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport Navigation from './Navigation';\nimport PostList from './PostList';\nimport { PostsContext } from '../context/postsContext';\n\nfunction Portal() {\n  const [pickedCategory, setPickedCategory] = useState(\"\");\n  const [posts, setPosts] = useContext(PostsContext);\n  useEffect(() => {\n    axios({\n      method: 'get',\n      url: 'http://localhost:5000/posts'\n    }).then(response => setPosts(response.data)).catch(error => console.log(error));\n  }, []);\n\n  const fetchPickedCategory = e => {\n    console.log(e.currentTarget.dataset.category);\n  };\n\n  useEffect(() => {\n    let filteredPosts;\n    filteredPosts = posts && posts.map(post => post.category === pickedCategory);\n  }, [pickedCategory]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, {\n    fetchPickedCategory: fetchPickedCategory,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PostList, {\n    pickedCategory: pickedCategory,\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Portal;","map":{"version":3,"sources":["C:/Projekti/MERN/frontend/src/ClientSide/Portal.js"],"names":["React","useState","useContext","useEffect","axios","Navigation","PostList","PostsContext","Portal","pickedCategory","setPickedCategory","posts","setPosts","method","url","then","response","data","catch","error","console","log","fetchPickedCategory","e","currentTarget","dataset","category","filteredPosts","map","post"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,SAASC,YAAT,QAA6B,yBAA7B;;AAEA,SAASC,MAAT,GAAkB;AACd,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,EAAD,CAApD;AACA,QAAM,CAACU,KAAD,EAAQC,QAAR,IAAoBV,UAAU,CAACK,YAAD,CAApC;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,KAAK,CAAC;AACFS,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,GAAG,EAAE;AAFH,KAAD,CAAL,CAIKC,IAJL,CAIUC,QAAQ,IAAIJ,QAAQ,CAACI,QAAQ,CAACC,IAAV,CAJ9B,EAKKC,KALL,CAKWC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CALpB;AAMH,GAPQ,EAON,EAPM,CAAT;;AAUA,QAAMG,mBAAmB,GAAIC,CAAD,IAAO;AAC/BH,IAAAA,OAAO,CAACC,GAAR,CAAYE,CAAC,CAACC,aAAF,CAAgBC,OAAhB,CAAwBC,QAApC;AACH,GAFD;;AAIAvB,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIwB,aAAJ;AACAA,IAAAA,aAAa,GAAGhB,KAAK,IAAIA,KAAK,CAACiB,GAAN,CAAUC,IAAI,IAAIA,IAAI,CAACH,QAAL,KAAkBjB,cAApC,CAAzB;AACH,GAHQ,EAGN,CAACA,cAAD,CAHM,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,UAAD;AAAY,IAAA,mBAAmB,EAAEa,mBAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,QAAD;AAAU,IAAA,cAAc,EAAEb,cAA1B;AAA0C,IAAA,KAAK,EAAEE,KAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADJ;AAMH;;AAED,eAAeH,MAAf","sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Navigation from './Navigation'\r\nimport PostList from './PostList'\r\nimport { PostsContext } from '../context/postsContext'\r\n\r\nfunction Portal() {\r\n    const [pickedCategory, setPickedCategory] = useState(\"\")\r\n    const [posts, setPosts] = useContext(PostsContext)\r\n\r\n    useEffect(() => {\r\n        axios({\r\n            method: 'get',\r\n            url: 'http://localhost:5000/posts'\r\n        })\r\n            .then(response => setPosts(response.data))\r\n            .catch(error => console.log(error))\r\n    }, [])\r\n\r\n\r\n    const fetchPickedCategory = (e) => {\r\n        console.log(e.currentTarget.dataset.category)\r\n    }\r\n\r\n    useEffect(() => {\r\n        let filteredPosts;\r\n        filteredPosts = posts && posts.map(post => post.category === pickedCategory)\r\n    }, [pickedCategory])\r\n    return (\r\n        <div className=\"App\">\r\n            <Navigation fetchPickedCategory={fetchPickedCategory} />\r\n            <PostList pickedCategory={pickedCategory} posts={posts} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Portal;\r\n"]},"metadata":{},"sourceType":"module"}